apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
  ext.kotlin_version = '1.9.10'
  ext.jackson_version = '2.16.0'

  repositories {
    maven { url = "https://cache-redirector.jetbrains.com/maven-central" }
    maven { url = "https://cache-redirector.jetbrains.com/intellij-dependencies" }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

sourceSets {
  test.kotlin.srcDirs += 'testSrc'
}

repositories {
  maven { url = "https://cache-redirector.jetbrains.com/maven-central" }
  maven { url = "https://cache-redirector.jetbrains.com/intellij-dependencies" }

  maven { url = "https://www.jetbrains.com/intellij-repository/releases" }
  maven { url = "https://www.jetbrains.com/intellij-repository/snapshots" }
  maven { url = "https://www.jetbrains.com/intellij-repository/nightly" }
}

dependencies {
  testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  testImplementation "org.kodein.di:kodein-di-jvm:7.20.2"

  testImplementation "com.jetbrains.intellij.platform:util:LATEST-TRUNK-SNAPSHOT"
  testImplementation "com.jetbrains.intellij.tools:ide-util-common:LATEST-TRUNK-SNAPSHOT"
  testImplementation "com.jetbrains.intellij.tools:ide-starter:LATEST-TRUNK-SNAPSHOT"
  testImplementation "com.jetbrains.intellij.tools:ide-performance-testing-commands:LATEST-TRUNK-SNAPSHOT"
  testImplementation "com.jetbrains.intellij.tools:ide-starter-junit5:LATEST-TRUNK-SNAPSHOT"

  testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'

  testImplementation 'io.kotest:kotest-assertions-core-jvm:5.5.4'
  testImplementation "com.fasterxml.jackson.core:jackson-databind:$jackson_version"
  testImplementation "com.fasterxml.jackson.module:jackson-module-kotlin:$jackson_version"
  testImplementation 'org.apache.httpcomponents:httpclient:4.5.14'
}

kotlin {
  jvmToolchain(17)
  compileKotlin {
    kotlinOptions {
      freeCompilerArgs += "-opt-in=kotlin.time.ExperimentalTime"
    }
  }
}

tasks.test {
  useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}

test.onlyIf { !project.hasProperty("dontRunTests") }
