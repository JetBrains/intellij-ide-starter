apply plugin: 'java'
apply plugin: 'kotlin'

buildscript {
  ext.kotlin_version = '1.6.10'

  repositories {
    maven { url = "https://cache-redirector.jetbrains.com/maven-central" }
    maven { url = "https://cache-redirector.jetbrains.com/intellij-dependencies" }
  }

  dependencies {
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

sourceSets {
  main.kotlin.srcDirs += 'src'
}

repositories {
  maven { url = "https://cache-redirector.jetbrains.com/maven-central" }
  maven { url = "https://cache-redirector.jetbrains.com/intellij-dependencies" }

  maven { url = "https://www.jetbrains.com/intellij-repository/releases" }
  maven { url = "https://www.jetbrains.com/intellij-repository/snapshots" }
  maven { url = "https://www.jetbrains.com/intellij-repository/nightly" }
}

dependencies {
  implementation "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8:1.5.2"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
  implementation "org.jetbrains.kotlin:kotlin-reflect:1.6.10"
  implementation "com.fasterxml.jackson.core:jackson-core:2.13.1"
  implementation "com.fasterxml.jackson.core:jackson-databind:2.13.1"
  implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.13.1"
  implementation "org.apache.httpcomponents:httpmime:4.5.13"
  implementation "org.jetbrains.intellij.deps:gradle-api:7.1.1-sp2"
  implementation "org.kodein.di:kodein-di-jvm:7.9.0"
  implementation "org.rauschig:jarchivelib:1.2.0"
  implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.1"
  implementation "commons-logging:commons-logging:1.2"
}

compileKotlin {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11.toString()
    freeCompilerArgs += [
      "-version",
      "-Xstrict-java-nullability-assertions",
      "-Xjvm-default=enable",
      "-Xuse-old-backend",
      "-Xopt-in=kotlin.io.path.ExperimentalPathApi",
      "-Xopt-in=kotlin.time.ExperimentalTime"
    ]
  }
}

compileTestKotlin {
  sourceCompatibility = JavaVersion.VERSION_11
  targetCompatibility = JavaVersion.VERSION_11

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_11.toString()
    freeCompilerArgs += [
      "-version",
      "-Xstrict-java-nullability-assertions",
      "-Xjvm-default=enable",
      "-Xuse-old-backend",
      "-Xopt-in=kotlin.io.path.ExperimentalPathApi",
      "-Xopt-in=kotlin.time.ExperimentalTime"
    ]
  }
}


test {
  useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}

task runOnlyUnitTests(type: Test) {
  filter {
    includeTestsMatching "com.intellij.ide.starter.tests.unit.*"
  }

  useJUnitPlatform()

  testLogging {
    events "passed", "skipped", "failed", "standardOut", "standardError"
  }
}
